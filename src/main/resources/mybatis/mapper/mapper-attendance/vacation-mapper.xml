<?xml version="1.0" encoding="UTF-8" ?>
<!-- DTD 선언 -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper라는 영역 안에 구문을 작성한다. - namespace : mapper 간의 충돌을 방지 하기 위한 이름 (필수) -->
<mapper namespace="vacation">
	<select id="allList" resultType="vacationVo" parameterType="map">
		SELECT RN
      , VACAPL_ID
      , VACTYPE_NAME
      , EMP_NAME
      , VACAPL_START
      , VACAPL_END
      , VACAPL_APPDATE
      , VACAPL_REASON
      , VACAPL_STATUS
      , DEPT_NAME
   FROM ( SELECT ROWNUM RN
      , A.VACAPL_ID
      , A.VACTYPE_NAME
      , A.EMP_NAME
      , A.VACAPL_START
      , A.VACAPL_END
      , A.VACAPL_APPDATE
      , A.VACAPL_REASON
      , A.VACAPL_STATUS
      , A.DEPT_NAME
      FROM (SELECT 		
      VC.VACAPL_ID
      , VT.VACTYPE_NAME
      , E.EMP_NAME
      , VC.VACAPL_START
      , VC.VACAPL_END
      , VC.VACAPL_APPDATE
      , VC.VACAPL_REASON
      , VC.VACAPL_STATUS
      , D.DEPT_NAME
   FROM VACAPPLY VC 
   JOIN VACTYPE VT ON (VT.VACTYPE_ID = VC.VACTYPE_ID)
   JOIN EMPLOYEE E ON (vc.emp_id = e.emp_id)
   JOIN DEPARTMENT D ON (E.DEPT_ID = D.DEPT_ID)
   <where>
   		<if test="search_cate == 'dept_name' and keyword != null and keyword !='' ">
   		AND INSTR(D.DEPT_NAME, #{keyword}) > 0 
   		</if>
   		<if test="search_cate == 'emp_name' and keyword != null and keyword!= '' ">
   		AND INSTR(E.EMP_NAME, #{keyword}) > 0
   		</if> 
   </where>
  ORDER BY VACAPL_APPDATE DESC) A)
  WHERE RN BETWEEN #{start} AND #{end}
	</select>

	<select id="reqDay" resultType="String">
		SELECT
		TRUNC(MONTHS_BETWEEN(SYSDATE, emp_hiredate)/12,0) as EMP_DATE
		FROM
		EMPLOYEE
		where emp_id = #{id}
	</select>
	<select id="vacReq" resultType="String">
		SELECT
		YEAR_DAY
		FROM YEAR_MANAGE
		WHERE YEAR_HIRE = #{reqday}
	</select>

	<select id="addreqDay" resultType="Integer">
		SELECT
		TO_DATE(TO_CHAR(V.VACAPL_END, 'YYYYMMDD')) - TO_DATE(V.VACAPL_START)+1
		FROM VACAPPLY V
		JOIN VACTYPE VT ON (VT.VACTYPE_ID = V.VACTYPE_ID)
		WHERE
		EMP_ID = #{id}
		AND VACTYPE_YEARYN = 'O'
		AND VACAPL_STATUS = '승인'
	</select>

	<select id="deptname" resultType="String">
		SELECT
		D.DEPT_NAME
		FROM
		DEPARTMENT D
		JOIN EMPLOYEE E ON (D.DEPT_ID = E.DEPT_ID)
		WHERE
		EMP_ID =
		#{id}
	</select>

	<select id="category" resultType="String">
		SELECT
		VACTYPE_NAME
		FROM VACTYPE
		WHERE VACTYPE_YN = 'Y'
	</select>
	
	<select id="categoryAll" resultType="String">
		SELECT
		VACTYPE_NAME
		FROM VACTYPE
	</select>

	<select id="catetype" resultType="String">
		SELECT
			VACTYPE_ID
		FROM VACTYPE
		WHERE VACTYPE_NAME = #{vactype_name}
	</select>
	<insert id="vacinsert" parameterType="com.egg.tfox.entity.attendance.VacationRequest">
		Insert into VACAPPLY
		(VACAPL_ID
		,VACTYPE_ID
		,EMP_ID
		,VACAPL_START
		,VACAPL_END
		,VACAPL_APPDATE
		,VACAPL_REASON
		,VACAPL_STATUS)
		values
		('VC'||TRIM(TO_CHAR(SEQ_VACAPLID.nextval,'000000'))
		,#{vactype_id}
		,#{emp_id}
		,to_date(#{vacapl_start}, '/RR/MM/DD')
		,to_date(#{vacapl_end}, '/RR/MM/DD')
		,DEFAULT
		,#{vacapl_reason}
		,'승인대기중')

	</insert>
	
	<select id="AllreqDay" resultType="Integer">
		SELECT
		TO_DATE(TO_CHAR(V.VACAPL_END, 'YYYYMMDD')) - TO_DATE(V.VACAPL_START)+1
		FROM VACAPPLY V
		JOIN VACTYPE VT ON (VT.VACTYPE_ID = V.VACTYPE_ID)
		WHERE
		EMP_ID = #{id}
		AND VACAPL_STATUS = '승인'
	</select>
	 
	<select id="myList" resultType="vacationVo">
	        		SELECT
		VC.VACAPL_ID
		,
		VT.VACTYPE_NAME
		, E.EMP_NAME
		, VC.VACAPL_START
		, VC.VACAPL_END
		,
		VC.VACAPL_APPDATE
		, VC.VACAPL_REASON
		, VC.VACAPL_STATUS
		, D.DEPT_NAME
		FROM VACAPPLY VC
		JOIN VACTYPE VT ON (VT.VACTYPE_ID = VC.VACTYPE_ID)
		JOIN EMPLOYEE E ON (vc.emp_id = e.emp_id)
		JOIN DEPARTMENT D ON
		(E.DEPT_ID = D.DEPT_ID)
        where vc.emp_id = #{id}
		ORDER BY VACAPL_APPDATE DESC
	</select>
	
	<select id="ctday" resultType="String">
			SELECT
		SUM(TO_DATE(TO_CHAR(V.VACAPL_END, 'YYYYMMDD')) - TO_DATE(V.VACAPL_START)+1) 
		FROM VACAPPLY V
		JOIN VACTYPE VT ON (VT.VACTYPE_ID = V.VACTYPE_ID)
		WHERE EMP_ID = #{id}
        AND VACAPL_STATUS = '승인'
		AND VACTYPE_NAME = #{category}
	</select>
	<select id="loadOnOff" resultType="com.egg.tfox.entity.attendance.VacationSet">
		SELECT 
   			 CORP_ID
  			, VAC_YN
 			, VAC_CREATE
  			, VAC_DATE
		FROM VACATIONSET
	</select>
	<update id="vacOnOff">
	 UPDATE VACATIONSET
			SET VAC_YN = #{vacOnOff}
			WHERE CORP_ID = 'COR001'
	</update>
	
	<select id="vcsday" resultType="com.egg.tfox.entity.attendance.VacationSet">
	SELECT
    	YEAR_ID
  	  , YEAR_DAY
	  FROM YEAR_MANAGE
	</select>
	
	<select id="setVacCate" resultType="com.egg.tfox.entity.attendance.VacationSet">
	SELECT
        VACTYPE_ID
      , VACTYPE_NAME
      , VACTYPE_YN
      , VACTYPE_YEARYN
   FROM VACTYPE
	</select>
	
	<select id="detailList" resultType="vacationVo">
		SELECT
		VC.VACAPL_ID
		,
		VT.VACTYPE_NAME
		, E.EMP_NAME
		, VC.VACAPL_START
		, VC.VACAPL_END
		,
		VC.VACAPL_APPDATE
		, VC.VACAPL_REASON
		, VC.VACAPL_STATUS
		, D.DEPT_NAME
		FROM VACAPPLY VC
		JOIN VACTYPE VT ON (VT.VACTYPE_ID = VC.VACTYPE_ID)
		JOIN EMPLOYEE E ON (vc.emp_id = e.emp_id)
		JOIN DEPARTMENT D ON
		(E.DEPT_ID = D.DEPT_ID)
		WHERE VACAPL_ID = #{vacapl_id}
		ORDER BY VACAPL_APPDATE DESC
	</select>
	
	<select id="countBoard" resultType="int">
		  SELECT COUNT(*)
  FROM (SELECT 		
      VC.VACAPL_ID
      , VT.VACTYPE_NAME
      , E.EMP_NAME
      , VC.VACAPL_START
      , VC.VACAPL_END
      , VC.VACAPL_APPDATE
      , VC.VACAPL_REASON
      , VC.VACAPL_STATUS
      , D.DEPT_NAME
       FROM VACAPPLY VC 
   JOIN VACTYPE VT ON (VT.VACTYPE_ID = VC.VACTYPE_ID)
   JOIN EMPLOYEE E ON (vc.emp_id = e.emp_id)
   JOIN DEPARTMENT D ON (E.DEPT_ID = D.DEPT_ID)
    <where>
   		<if test="search_cate == 'dept_name' and keyword != null and keyword !='' ">
   		AND INSTR(D.DEPT_NAME, #{keyword}) > 0
   		</if>
   		
   		<if test="search_cate == 'emp_name' and keyword != null and keyword!= '' ">
   		AND INSTR(E.EMP_NAME, #{keyword}) > 0
   		</if> 
   </where>)
	</select>
	
	<update id="acceptY">
		UPDATE VACAPPLY
		SET VACAPL_STATUS = '승인'
		WHERE VACAPL_ID = #{y}
	</update>
	
	<update id="acceptN">
		UPDATE VACAPPLY
		SET VACAPL_STATUS = '반려'
		WHERE VACAPL_ID = #{n}
	</update>
	
	<update id="vacDaySet">
			UPDATE YEAR_MANAGE
			SET YEAR_DAY = #{vcdate}
			WHERE YEAR_ID = #{yearid}
	</update>
	
	<update id="vacCateSet">
	MERGE INTO VACTYPE
	USING DUAL
	ON (VACTYPE_NAME = #{vactypeName})
	WHEN MATCHED THEN
		UPDATE SET
		VACTYPE_YN = #{vactypeYN}
	  , VACTYPE_YEARYN = #{yearYN}
	WHEN NOT MATCHED THEN	
		INSERT (
	    VACTYPE_ID
	  , VACTYPE_NAME
	  , VACTYPE_YN
	  , VACTYPE_YEARYN
		) VALUES (
		'VCT'||TRIM(TO_CHAR(SEQ_VACTYPEID.nextval,'000'))
	  , #{vactypeName}
	  , #{vactypeYN}
	  , #{yearYN}
		)
	</update>
</mapper>
















