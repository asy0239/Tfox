<?xml version="1.0" encoding="UTF-8" ?>
<!-- DTD 선언 -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	mapper라는 영역 안에 구문을 작성한다.
	- namespace : mapper 간의 충돌을 방지 하기 위한 이름 (필수) 
 -->
<mapper namespace="approval">
	<select id="docList" resultType="approvalMainVo" parameterType="string">
	select 
       appdoc.app_id,
       appdoc.emp_id,
       appdoc.app_title,
       appdoc.app_excu_id,
       appdoc.app_date,
       appdoc.app_content,
       appdoc.app_status,
       appdoc.app_checktime,
       temp.temp_id,
       temp.temp_title,
       temp.temp_content,
       emp.emp_name,
       emp.emp_loginid,
       dept.dept_id,
       dept.dept_name
		from approval_doc appdoc, template temp , employee emp , department dept
		where appdoc.temp_id = temp.temp_id
		and appdoc.emp_id = emp.emp_id
		and emp.dept_id = dept.dept_id
        and emp.emp_loginid = #{userName}
	</select>
	
	<select id="templateRankList" resultType="hashmap" parameterType="string">
		select temp_id , count(*) count
			from employee e , approval_doc doc
			where e.emp_id = doc.emp_id
			and emp_loginid = #{UserName}
			group by temp_id
			order by count(*) desc
	</select>
	
	<select id="templateAll" resultType="com.egg.tfox.entity.approval.TemplateEntity">
		select * from template
	</select>
	<!-- 사용자가 보낸 문서가 7일이상 지연된 결재요청 -->
	<select id="weekIgnore" resultType="approvalMainVo" parameterType="string">
		select 
       appdoc.app_id,
       appdoc.emp_id,
       appdoc.app_title,
       appdoc.app_excu_id,
       appdoc.app_date,
       appdoc.app_content,
       appdoc.app_status,
       appdoc.app_checktime,
       temp.temp_id,
       temp.temp_title,
       temp.temp_content,
       emp.emp_name,
       emp.emp_loginid,
       dept.dept_id,
       dept.dept_name
		from approval_doc appdoc, template temp , employee emp , department dept
		where appdoc.temp_id = temp.temp_id
		and appdoc.emp_id = emp.emp_id
		and emp.dept_id = dept.dept_id
        and emp.emp_loginid = #{userName}
        and to_char(appdoc.app_date, 'yyyymmdd') <![CDATA[<]]> (sysdate - 7)        
        and appdoc.app_checktime is null
	</select>
	<!-- 사용자가 결재처리 해야 될 내역 -->
	<select id="noCheck" resultType="approvalMainNoCheckVo" parameterType="string">
	select 
    sendEmp.emp_id send_emp_id,
    sendEmp.emp_name send_emp_name,
    dept.dept_name send_dept_name,
    approver.send_app_id,
    approver.approver_id,
    approver.approver_name,
    approver.send_app_title,
    approver.send_app_excu_id,
    approver.send_app_date app_date,
    approver.send_app_content,
    approver.send_app_status,
    approver.send_app_checktime,
    approver.get_apporder_code,
    approver.get_apporder_check,
    approver.get_apporder_apply,
    approver.send_temp_id,
    approver.send_temp_title,
    approver.send_temp_content
from employee sendEmp ,department dept, (select 
    app_st.appstatment_id get_app_statment_id,
    app_st.app_id get_app_id, 
    app_st.emp_id approver_id,
    app_st.apporder_code get_apporder_code,
    app_st.apporder_check get_apporder_check,
    app_st.apporder_apply get_apporder_apply,
    emp.emp_loginid get_emp_loginid,
    emp.emp_name approver_name,
    app_doc.app_id send_app_id,
    app_doc.emp_id send_emp_id,
    app_doc.app_title send_app_title,
    app_doc.app_excu_id send_app_excu_id,
    app_doc.app_date send_app_date,
    app_doc.app_content send_app_content,
    app_doc.app_status send_app_status,
    app_doc.app_checktime send_app_checktime,
    app_doc.temp_id send_temp_id,
    temp.temp_title send_temp_title,
    temp.temp_content send_temp_content
	from approval_statement app_st , approval_doc app_doc , employee emp, template temp
	where app_st.app_id = app_doc.app_id
	and emp.emp_id = app_st.emp_id
	and app_st.apporder_apply != '승인'
	and temp.temp_id = app_doc.temp_id) approver
	where sendEmp.emp_id = approver.send_emp_id
	and sendEmp.dept_id = dept.dept_id
	and approver.get_emp_loginid = #{userName}
	</select>
	<!-- 사용자의 참조 문서 -->
	<select id="refDoc" parameterType="string" resultType="com.egg.tfox.vo.approval.ApprovalMainRefVo">
		select 
    send_app_id,
    send_emp_id,
    send_emp.emp_loginid send_emp_loginid,
    send_emp.emp_name send_emp_name,
    dept.dept_id send_dept_id,
    dept.dept_name send_dept_name,
    ref_emp_id,
    ref_emp_name,
    ref_emp_loginid,
    app_title,
    app_excu_id,
    app_date,
    app_content,
    app_status,
    temp_id,
    temp_title,
    temp_content,
    ref_dept_id,
    ref_dept_name
from (select 
    send_app_id,
    send_emp_id,
    ref_emp_id,
    e.emp_name ref_emp_name,
    e.emp_loginid ref_emp_loginid,
    app_doc.app_title,
    app_doc.app_excu_id,
    app_doc.app_date,
    app_doc.app_content,
    app_doc.app_status,
    app_doc.app_checktime
    temp_id,
    temp.temp_title,
    temp.temp_content,
    dept.dept_id ref_dept_id,
    dept.dept_name ref_dept_name
    from (select 
       app_doc.app_id send_app_id,
       app_doc.emp_id send_emp_id,
       app_ref.emp_id ref_emp_id,
       app_st.emp_id approval_emp_id,
       app_st.apporder_code apporder_code
	from approval_doc app_doc , approval_reference app_ref , approval_statement app_st
	where app_doc.app_id = app_ref.app_id
	and app_doc.app_id = app_st.app_id) , employee e, approval_doc app_doc, template temp, department dept
	where e.emp_id = ref_emp_id
	and app_doc.app_id = send_app_id
	and temp.temp_id = app_doc.temp_id
	and e.dept_id = dept.dept_id
	and e.emp_loginid = #{userName}), employee send_emp , department dept 
	where send_emp_id = send_emp.emp_id
	and send_emp.dept_id = dept.dept_id
	</select>
	
<!-- 	<insert id="insertDoc" parameterType="com.egg.tfox.vo.approval.ApprovalEditDocVo">
		insert into approval_doc
		values ('AP'||TRIM(TO_CHAR(SEQ_APPID.nextval,'000000')),
		        #{emp_id}, #{app_title}, #{app_excu_id}, sysdate,
		        #{app_content}, #{app_status}, null , #{temp_id})
	</insert>
	
	<insert id="insertRefDoc" parameterType="com.egg.tfox.vo.approval.ApprovalEditDocVo">
		insert into approval_reference
		values ('AP'||TRIM(TO_CHAR(SEQ_APPID.currval,'000000')),#{ref_emp_id}, 'AR'||TRIM(TO_CHAR(SEQ_APPID.nextval,'000000')))		
	</insert>
	<insert id="insertState" parameterType="com.egg.tfox.vo.approval.ApprovalEditDocVo">
		insert into approval_statement
		values ('AS'||TRIM(TO_CHAR(SEQ_APSTID.nextval,'000000')),'AP'||TRIM(TO_CHAR(SEQ_APPID.currval,'000000')), #{approval_emp_id},#{apporder_code},null, null)
	</insert>
-->
	<select id="selectTempId" resultType="string" parameterType="string">
		select temp_id from template where temp_title = #{temp_title}
	</select>
	<select id="selectEmpId" resultType="string" parameterType="string">
		select emp_id from employee where emp_loginid = #{emp_name}
	</select>
	<!-- com.egg.tfox.vo.approval.ApprovalEmpPos -->
	<select id="selectEmp_pos" resultType="com.egg.tfox.vo.approval.ApprovalEmpPos">
		select
		    emp.emp_id,
		    emp.emp_name,
		    pos.pos_id,
		    pos.pos_name
		from employee emp, position pos
		where emp.pos_id = pos.pos_id
		and emp.emp_id in (
			<foreach collection="list" item="item" index="index" separator=",">
				#{item}
			</foreach>
			)
		order by pos_id desc
	</select>
	
	
 	<insert id="insertTotalDoc" parameterType="com.egg.tfox.vo.approval.ApprovalEditDocVo">
		insert all
		into approval_doc
		values ('AP'||TRIM(TO_CHAR(SEQ_APPID.nextval,'000000')),
		        #{emp_id}, #{app_title}, #{app_excu_id}, sysdate,
		        #{app_content}, #{app_status}, null, #{temp_id})
		<foreach collection="ref_emp_id" item="ref" index="index">
		into approval_reference
		values ('AP'||TRIM(TO_CHAR(SEQ_APPID.currval,'000000')),
		        #{ref}, 
		        'AR'||TRIM(TO_CHAR(SEQ_APREFID.nextval+#{index},'000000')))
		</foreach>
		<foreach collection="approval_emp_id" item="appr" index="index">
		into approval_statement
		values ('AS'||TRIM(TO_CHAR(SEQ_APSTID.nextval+#{index},'000000')),
				'AP'||TRIM(TO_CHAR(SEQ_APPID.currval,'000000')),
				 #{appr}, #{index}+1, null , '결재중')
		</foreach>
		select * from dual
		
	</insert>
	
	<select id="sendDocList" resultType="com.egg.tfox.vo.approval.ApprovalSendDocVo" parameterType="string">
		select
		    app_doc.app_id send_app_id,
		    app_doc.emp_id send_emp_id,
		    temp.temp_title temp_title,
		    app_doc.app_title send_app_title,
		    app_doc.app_date send_app_date,
		    app_doc.app_content send_app_content,
		    app_doc.app_status send_app_status,
		    app_doc.app_checktime send_app_checkTime,
		    app_st.appstatment_id st_id,
		    app_st.emp_id st_emp_id,
		    emp.emp_name st_emp_name,
		    dept.dept_name st_emp_dept_name,
		    app_st.apporder_code st_order_code,
		    app_st.apporder_check st_order_checkTime,
		    app_st.apporder_apply st_apply
		from approval_doc app_doc , approval_statement app_st , employee emp , department dept, template temp
		where app_doc.emp_id = #{emp_id}
		and app_st.emp_id = emp.emp_id
		and app_doc.app_id = app_st.app_id
		and dept.dept_id = emp.dept_id
		and app_doc.temp_id = temp.temp_id
		order by send_app_date desc
	</select>
	
	<select id="sendDocListCount" parameterType="string" resultType="int">
		select count(*) from (select
		    app_doc.app_id send_app_id,
		    temp.temp_title temp_name,
		    app_doc.emp_id send_emp_id,
		    app_doc.app_title send_app_title,
		    app_doc.app_date send_app_date,
		    app_doc.app_content send_app_content,
		    app_doc.app_status send_app_status,
		    app_doc.app_checktime send_app_checkTime,
		    app_st.appstatment_id st_id,
		    app_st.emp_id st_emp_id,
		    emp.emp_name st_emp_name,
		    dept.dept_name st_emp_dept_name,
		    app_st.apporder_code st_order_code,
		    app_st.apporder_check st_order_checkTime,
		    app_st.apporder_apply st_apply
		from approval_doc app_doc , approval_statement app_st , employee emp , department dept, template temp
		where app_doc.emp_id = 'E000003'
		and app_st.emp_id = emp.emp_id
		and app_doc.app_id = app_st.app_id
		and dept.dept_id = emp.dept_id
		and app_doc.temp_id = temp.temp_id
		order by send_app_date desc)
	</select>
</mapper>